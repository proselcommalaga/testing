# service definition
service:
 # UUAA.length < 4
  uuaa: ENV
  # Nombre comercial del servicio
  publicName: API en java spring
  # Nombre corto de servicio
  # match ^[a-zA-Z0-9]+$
  name: javaapi{}
  # Descripción del servicio
  description: >
    Api mu chola en JAVA
  version: "1.0.0"
  # Tipo de servicio
  # Type: [API REST], [BATCH] or [CDN]
  type: API REST
  # Language
  # [JAVA - SPRING BOOT], [JAVA - SPRING CLOUD TASK], [JAVA - SPRING BATCH] or [ANGULAR THIN2]
  language: Javo - Spring boot
  # Versión del language
  # Java version >= 1.8
  languageVersion: "1.7.121"
  # Versión mínima de NOVA
  # Nova version >= 18
  novaVersion: "4.04"

# swagger api definitions
apis:
  # list of APIs that this service expose
  served:
    # swagger definition file
    # swagger can't be empty
    - definition:

    # APIs that are used in this implementation
      consumed:
        - src/main/resources/api-client.yml

  # APIs that are used not directly by any API endpoint
  # clients:
  #   - src/main/resources/apic1.yml

# service properties at config-server
properties:
  # property name/identifier must be unique
  # Empty//Null property name
  - name:
    description: "Nivel de log"
    # type: STRING, JSON, XML
    type: "STRINGO"
    # default value
    default: "silly"
    # who is the property owner
    # SERVICE: any team member can modify this property
    # ENVIRONMENT: Only environment owner can modify this property
    # - INT, PRE, PRO: Project support - Product = dev
      # - INT, PRE: Project support - Product = Maintenance
      # - PRO: Service support - Product = Maintenance
    #[SERVICE], [LIBRARY] or [ENVIRONMENT]
    management: "SERVICIO"
    # encrypt property so it's only visible by the owner
    # [true] - [false]
    encrypt: falso

# Optional
# dependencies, build order
# list of project names you depend on
# those must be in the same subsystem
dependencies:
  - service-name-001
  - service-name-002

# Optional
# List of extra ports your application need to expose to the outside world
ports:
  # port your application will run
  - insidePort: 8080
    # port name/identifier, used for connector
    name: Fix
    description: descripcion
    # type: TCP,UDP
    type: TCP
    # Optional
    # NOVA will give you one by default
    # port in the host machine you need to expose your application
    outsidePort: 37495

# Optional
# Extra build steps you application need
# Example: binary dependencies
build:
  - kerberos: true

# Optional
# list of machines your application must be deployed
machines:
 - INT: ["nova_machine_601"]
 - PRE: ["nova_machine_602"]
 - PRO: ["nova_machine_603"]