YXN5bmNhcGk6ICcyLjAuMCcKaW5mbzoKICB0aXRsZTogVGVzdDFDaGFubmVsMzEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MAogIHZlcnNpb246ICcxLjAuMCcKICBkZXNjcmlwdGlvbjogfAogICAgVGhlIFRoaXJkIGNoYW5uZWwgb2YgdGhlIGZpcnN0IFRlc3Qgd2l0aCBtb2RlIGRpcmVjdCA9IHN1YnNjcmliZQogIHgtYnVzaW5lc3MtdW5pdDogYWJjZAoKZGVmYXVsdENvbnRlbnRUeXBlOiBhcHBsaWNhdGlvbi9qc29uCgpjaGFubmVsczoKICBteWNoYW5uZWwzOgogICAgZGVzY3JpcHRpb246IFRoZSBjaGFubmVsIDMKICAgIHN1YnNjcmliZToKICAgICAgc3VtbWFyeTogU3VtbWFyeSBvZiB0aGUgbWVzc2FnZXMuCiAgICAgIG9wZXJhdGlvbklkOiBteUNoYW5uZWwzT3BlcmF0aW9uCiAgICAgIG1lc3NhZ2U6CiAgICAgICAgJHJlZjogJyMvY29tcG9uZW50cy9tZXNzYWdlcy9tZXNzYWdlM180JwogICAgICB4LXNjcy1ncm91cDogbXlOb3ZhR3JvdXAKCmNvbXBvbmVudHM6CiAgbWVzc2FnZXM6CiAgICBtZXNzYWdlM180OgogICAgICBuYW1lOiBuYW1lTWVzc2FnZTNfNAogICAgICB0aXRsZTogdGl0bGVNZXNzYWdlM180CiAgICAgIHN1bW1hcnk6IEluZm9ybSBhYm91dCBtZXNzYWdlIDNfNC4KICAgICAgcGF5bG9hZDoKICAgICAgICAkcmVmOiAiIy9jb21wb25lbnRzL3NjaGVtYXMvbWVzc2FnZTNfNFBheWxvYWQiCiAgc2NoZW1hczoKICAgIG1lc3NhZ2UzXzRQYXlsb2FkOgogICAgICB0eXBlOiBvYmplY3QKICAgICAgcHJvcGVydGllczoKICAgICAgICBnZW5lcmljRGF0YTNfNDoKICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgZGVzY3JpcHRpb246IEFueSBtb3JlIGRhdGEuCiAgICAgICAgc2VudEF0OgogICAgICAgICAgJHJlZjogIiMvY29tcG9uZW50cy9zY2hlbWFzL3NlbnRBdCIKICAgIHNlbnRBdDoKICAgICAgdHlwZTogc3RyaW5nCiAgICAgIGZvcm1hdDogZGF0ZS10aW1lCiAgICAgIGRlc2NyaXB0aW9uOiBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIG1lc3NhZ2Ugd2FzIHNlbnQuCg