package com.bbva.enoa.platformservices.coreservice.common.repositories;

import com.bbva.enoa.datamodel.model.product.entities.DocSystem;
import com.bbva.enoa.datamodel.model.product.enumerates.DocumentCategory;
import com.bbva.enoa.datamodel.model.product.enumerates.DocumentType;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;

/**
 * BatchServiceSchedule repository.
 */
@Transactional(readOnly = true)
public interface DocSystemRepository extends JpaRepository<DocSystem, Integer>
{
    /**
     * Gets all DocSystem from a product, ordered by name asc.
     *
     * @param productId Product ID.
     * @return List od DocSystem.
     */
    @Query("select ds from DocSystem ds where ds.product.id = :productId order by ds.systemName asc")
    List<DocSystem> findByProduct(@Param("productId") int productId);

    /**
     * Find by system name, product's ID, category and type.
     *
     * @param systemName DocSystem's name
     * @param productId  Product's ID.
     * @param category   DocSystem's category.
     * @param type       DocSystem's type.
     * @return a DocSystem
     */
    Optional<DocSystem> findBySystemNameAndProductIdAndCategoryAndType(String systemName, Integer productId, DocumentCategory category, DocumentType type);

    /**
     * Find a DocSystem by ID, category and type.
     *
     * @param id       DocSystem's ID.
     * @param category DocSystem's category.
     * @param type     DocSystem's type.
     * @return The DocSystem.
     */
    Optional<DocSystem> findByIdAndCategoryAndType(Integer id, DocumentCategory category, DocumentType type);


    /**
     * Find by product's ID and autogenerated by the platform.
     *
     * @param productId               Product's ID.
     * @param autoGeneratedByPlatform Autogenerated by the platform.
     * @return A List of DocSystem.
     */
    List<DocSystem> findByProductIdAndAutogeneratedByPlatform(Integer productId, Boolean autoGeneratedByPlatform);

    /**
     * Find a DocSystem by url, category and type.
     *
     * @param url      DocSystem's url.
     * @param category DocSystem's category.
     * @param type     DocSystem's type.
     * @return The DocSystem.
     */
    Optional<DocSystem> findByUrlAndCategoryAndType(String url, DocumentCategory category, DocumentType type);

}
